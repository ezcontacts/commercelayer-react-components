"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.setShippingMethod=exports.getShipments=exports.setShipmentErrors=exports.shipmentInitialState=void 0;const tslib_1=require("tslib"),baseReducer_1=tslib_1.__importDefault(require("../utils/baseReducer")),getSdk_1=tslib_1.__importDefault(require("../utils/getSdk"));exports.shipmentInitialState={errors:[]};const setShipmentErrors=(errors,dispatch)=>{dispatch&&dispatch({type:"setErrors",payload:{errors}})};exports.setShipmentErrors=setShipmentErrors;const getShipments=({order,dispatch,config})=>tslib_1.__awaiter(void 0,void 0,void 0,function*(){try{const sdk=(0,getSdk_1.default)(config),shipments=order.shipments,deliveryLeadTimes=yield sdk.delivery_lead_times.list({include:["shipping_method","stock_location"]});dispatch({type:"setShipments",payload:{shipments,deliveryLeadTimes}})}catch(error){console.error(error)}});exports.getShipments=getShipments;function setShippingMethod({config,shipmentId,shippingMethodId,getOrder,order}){return tslib_1.__awaiter(this,void 0,void 0,function*(){try{if(shippingMethodId){const sdk=(0,getSdk_1.default)(config);if(yield sdk.shipments.update({id:shipmentId,shipping_method:sdk.shipping_methods.relationship(shippingMethodId)}),getOrder!=null&&order!=null)return{success:!0,order:yield getOrder(order.id)}}return{success:!1}}catch(error){return console.error(error),{success:!1}}})}exports.setShippingMethod=setShippingMethod;const type=["setErrors","setShipments","setShippingMethod"],shipmentReducer=(state,reducer)=>(0,baseReducer_1.default)(state,reducer,type);exports.default=shipmentReducer;